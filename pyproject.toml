[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "game-dashboard"
version = "0.1.0"
description = "Desktopowy dashboard gier: aktywność, premiery, ceny (Steam/Deals)."
readme = "README.md"
requires-python = ">=3.11,<3.13"  # rekomendujemy 3.12
authors = [{ name = "Szymon Marciniak i Natan Misztal", email = "szymon.marciniak.media@gmail.com" }]
license = { text = "MIT" }

# CORE zależności aplikacji (MVP)
dependencies = [
  "PySide6>=6.7",
  "qasync>=0.26",            # most Qt <-> asyncio
  "httpx[http2]>=0.27",
  "tenacity>=9.0",           # retry/backoff
  "pydantic>=2.7",           # modele danych
  "rapidfuzz>=3.6",          # dopasowanie tytułów
  "python-dotenv>=1.0",      # .env
  "platformdirs>=4.2",       # ścieżki na config/cache/logi
  "loguru>=0.7",             # logi
]

[project.optional-dependencies]
viz-mpl = ["matplotlib>=3.8"]         # wykresy (embed w Qt)
viz-pyqtgraph = ["pyqtgraph>=0.13"]   # lżejsze, szybkie wykresy
pandas = ["pandas>=2.2"]              # eksport/analizy (opcjonalnie)
async-sqlite = ["aiosqlite>=0.20"]    # jeśli chcemy async nad SQLite
dev = [
  "pytest>=8.2",
  "pytest-qt>=4.4",
  "ruff>=0.6",        # lint
  "mypy>=1.11",       # typy
]
build = [
  "pyinstaller>=6.9",
]

[project.scripts]
# Prosty CLI do eksportów/analityki (możesz dostosować ścieżkę)
gamedash = "app.cli.export_cli:main"

[tool.setuptools]
# Używamy istniejącego układu (pakiet "app" w katalogu głównym repo)
packages = { find = { where = ["."] } }
include-package-data = true

[tool.setuptools.package-data]
# Dołącz statyczne zasoby do dystrybucji (ikony, style)
"app.ui.assets" = ["**/*"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "__pycache__/*"]